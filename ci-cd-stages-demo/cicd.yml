trigger: 
  branches:
    include:
    - master 
  paths:
    include: 
    - /ci-cd-stages-demo/*

variables:
    - name: MajorVersion
      value: 1
    - name: MinorVersion
      value: 0
    - name: PatchNumber
      value: 1
    - name: isMain
      value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
    - name: BuildName
      ${{ if eq( variables['isMain'], True) }}:
        value: $(MajorVersion).$(MinorVersion).$(PatchNumber).$(Rev:r)
      ${{ if eq( variables['isMain'], False) }}:
        value: $(MajorVersion).$(MinorVersion).$(PatchNumber)-prerelease.$(Rev:r)

name: $(MajorVersion).$(MinorVersion).$(PatchNumber).$(Rev:r)
#use a condnition to name the release, if not master then 'prerelease'

#TEST THE BASIC STAGES
#DEPENDS
#CONDITIONAL BUILD NAME
#TEMPLATE FOR BUILD
#TEPLATE FOR DEPLOY
#PASS SOME VARIABLES
#POWERSHELL TO DSISPLAY SECRET

pool:
  vmImage: 'ubuntu-latest'


stages:
- stage: BUILD_STAGE
  jobs:
  - job: BUILD_STAGE_JOB
    steps:
    - bash: echo "Hello world in build stage"


- stage: DEPLOY_DEV
  jobs:
  - job: DEPLOY_DEV_JOB
    steps:
    - bash: echo "Hello world in build stage"

- stage: DEPLOY_PROD
  jobs:
  - job: DEPLOY_PROD_JOB
    steps:
    - bash: echo "Hello world in build stage"
