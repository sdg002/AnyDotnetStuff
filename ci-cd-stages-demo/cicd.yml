trigger: 
  branches:
    include:
    - master 
  paths:
    include: 
    - /ci-cd-stages-demo/*

variables:
    - name: MajorVersion
      value: 1
    - name: MinorVersion
      value: 0
    - name: PatchNumber
      value: 1
    - name: blahname1
      value: $(MajorVersion).$(MinorVersion).$(PatchNumber)-prerelease.$(Rev:r)
    - name: blahname2
      value: $(MajorVersion).$(MinorVersion).$(PatchNumber).$(Rev:r)
    - name: blahname3
      value: {{ $(MajorVersion).$(MinorVersion).$(PatchNumber)-prerelease.$(Rev:r) }}
    - name: isMain
      value: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/main') }}
    - name: BuildName
      ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
        value: ${{ variables.blahname1 }}
      ${{else}}:
        value: ${{ variables.blahname2 }}
    - name: BuildName2
      value: another build name 2

    #the following does not work 
    #the following did not work
    # - name: blahname3
    #   value: {{ blahname3value }}
    #this works

    # - name: BuildName
    #   value: {{ variables.blahname1}}
    #   ${{ if eq( variables.isMain, true) }}:
    #     value: $(MajorVersion).$(MinorVersion).$(PatchNumber).$(Rev:r)
    #   # ${{ if eq( variables.isMain, false) }}:
    #   #   value: $(MajorVersion).$(MinorVersion).$(PatchNumber)-prerelease.$(Rev:r)

#this is not allowed in this context
# ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
#   name: $(MajorVersion).$(MinorVersion).$(PatchNumber).$(Rev:r)
# ${{ else }}:
#   name: $(MajorVersion).$(MinorVersion).$(PatchNumber)-prerelease.$(Rev:r)

#use a condnition to name the release, if not master then 'prerelease'

#CONDITIONAL BUILD NAME
#TEMPLATE FOR BUILD
#TEPLATE FOR DEPLOY
#PASS SOME VARIABLES
#POWERSHELL TO DSISPLAY SECRET

pool:
  vmImage: 'ubuntu-latest'


stages:
- stage: BUILD_STAGE
  jobs:
  - job: BUILD_STAGE_JOB
    steps:
    - bash: echo "Hello world in build stage"
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: set

- stage: DEPLOY_DEV
  dependsOn: BUILD_STAGE
  jobs:
  - job: DEPLOY_DEV_JOB
    steps:
    - bash: echo "Hello world in build stage"

- stage: DEPLOY_PROD
  dependsOn: DEPLOY_DEV
  condition: eq(variables['build.sourceBranch'], 'refs/heads/main')
  jobs:
  - job: DEPLOY_PROD_JOB
    steps:
    - bash: echo "Hello world in build stage"
